// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

// OpsRepositoryImagesDao is the manager for logic model data accessing and custom defined data operations functions management.
type OpsRepositoryImagesDao struct {
	Table   string                     // Table is the underlying table name of the DAO.
	Group   string                     // Group is the database configuration group name of current DAO.
	Columns OpsRepositoryImagesColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
}

// OpsRepositoryImagesColumns defines and stores column names for table tbl_ops_repository_images.
type OpsRepositoryImagesColumns struct {
	Id           string // 镜像ID
	Title        string // 镜像标题
	ImageOrg     string // 镜像组织
	ImageName    string // 镜像名称
	ImageTag     string // 镜像标签(版本)
	Status       string // 状态(-1:删除,0:停用,1:启用)
	RepositoryId string // 所属镜像仓库ID
	CreateTime   string // 创建时间
	UpdateTime   string // 更新时间
}

//  opsRepositoryImagesColumns holds the columns for table tbl_ops_repository_images.
var opsRepositoryImagesColumns = OpsRepositoryImagesColumns{
	Id:           "id",
	Title:        "title",
	ImageOrg:     "image_org",
	ImageName:    "image_name",
	ImageTag:     "image_tag",
	Status:       "status",
	RepositoryId: "repository_id",
	CreateTime:   "create_time",
	UpdateTime:   "update_time",
}

// NewOpsRepositoryImagesDao creates and returns a new DAO object for table data access.
func NewOpsRepositoryImagesDao() *OpsRepositoryImagesDao {
	return &OpsRepositoryImagesDao{
		Group:   "default",
		Table:   "tbl_ops_repository_images",
		Columns: opsRepositoryImagesColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *OpsRepositoryImagesDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *OpsRepositoryImagesDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *OpsRepositoryImagesDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
